{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/services-list/add-service/add-service.component.ts","webpack:///src/app/components/services-list/add-service/add-service.component.html","webpack:///src/app/components/services-list/services-list.component.ts","webpack:///src/app/components/services-list/services-list.component.html","webpack:///src/app/components/services-list/update-service/update-service.component.ts","webpack:///src/app/components/services-list/update-service/update-service.component.html","webpack:///src/app/models/Service.ts","webpack:///src/app/services/kry-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","entryComponents","providers","bootstrap","appRoutes","path","component","routing","forRoot","useHash","preloadingStrategy","HomeComponent","AddServiceComponent","name","service","console","log","save","ServicesListComponent","kryService","modalService","dialog","getServices","selectedService","subscribe","result","services","dataSource","error","dialogRef","open","afterClosed","addService","res","data","updateService","deleteService","openAddServiceDialog","openUpdateServiceDialog","UpdateServiceComponent","Service","KryServiceService","http","get","post","JSON","stringify","put","httpOptions","headers","body","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<div class=\"container-fluid\">\r\n  <div>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTableModule} from '@angular/material/table';\nimport { AppComponent } from './app.component';\nimport { ServicesListComponent } from './components/services-list/services-list.component';\n\nimport { HomeComponent } from './components/home/home.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {routing} from \"./app.routing\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule} from \"@angular/forms\";\nimport { AddServiceComponent } from './components/services-list/add-service/add-service.component';\nimport {MatFormField} from \"@angular/material/form-field\";\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { UpdateServiceComponent } from './components/services-list/update-service/update-service.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServicesListComponent,\n    HomeComponent,\n    AddServiceComponent,\n    UpdateServiceComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    routing,\n    MatDialogModule,\n    MatListModule,\n    MatTabsModule,\n    MatTableModule,\n    MatInputModule,\n    HttpClientModule,\n    MatButtonModule,\n    NgbModule,\n    FormsModule\n  ],\n  entryComponents: [AddServiceComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {PreloadAllModules, RouterModule, Routes} from \"@angular/router\";\r\nimport {ModuleWithProviders} from \"@angular/core\";\r\nimport {HomeComponent} from \"./components/home/home.component\";\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes, { useHash: true, preloadingStrategy: PreloadAllModules });\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br>\n\n<h1>KRY Services</h1>\n\n<br><br>\n<app-services-list></app-services-list>\n","import { Component, OnInit } from '@angular/core';\nimport {Service} from \"../../../models/Service\";\n\n\n\n@Component({\n  selector: 'app-add-service',\n  templateUrl: './add-service.component.html',\n  styleUrls: ['./add-service.component.css']\n})\nexport class AddServiceComponent implements OnInit {\n\n  name: string = '';\n  service:Service;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.service = new Service();\n  }\n\n  save(){\n      console.log(this.service);\n  }\n\n}\n","\n<form class=\"example-form\" name=\"form\" #f=\"ngForm\" novalidate>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Name</mat-label>\n    <input matInput placeholder=\"Service Name\" name=\"name\" [(ngModel)] = \"service.name\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Hostname</mat-label>\n    <input matInput placeholder=\"Host Name\" name=\"hostname\" [(ngModel)] = \"service.hostname\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Port</mat-label>\n    <input matInput placeholder=\"Port Number\" name=\"port\" [(ngModel)] = \"service.port\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Url</mat-label>\n    <input matInput placeholder=\"Url\" name=\"url\" [(ngModel)] = \"service.url\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n</form>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button [mat-dialog-close]=\"service\" cdkFocusInitial (click)=\"save()\" [disabled]=\"(!f.form.valid)\">Add</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport {KryServiceService} from \"../../services/kry-service.service\";\nimport {Service} from \"../../models/Service\";\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddServiceComponent} from \"./add-service/add-service.component\";\nimport {UpdateServiceComponent} from \"./update-service/update-service.component\";\n\n@Component({\n  selector: 'app-services-list',\n  templateUrl: './services-list.component.html',\n  styleUrls: ['./services-list.component.css']\n})\nexport class ServicesListComponent implements OnInit {\n\n  name:string='';\n  dataSource:Service[];\n  services:Service[];\n  service:Service;\n  selectedService:Service;\n\n  constructor(private kryService:KryServiceService,private modalService: NgbModal,private dialog: MatDialog) { }\n\n  ngOnInit(){\n    this.service = new Service();\n    this.getServices();\n  }\n\n  onSelect(service: Service): void {\n    this.selectedService = service;\n  }\n\n  getServices(){\n\n    this.kryService\n      .getServices()\n      .subscribe(result => {\n          this.services = result;\n          this.dataSource = this.services;\n        },\n        error => {\n          console.log(error);\n        });\n\n  }\n\n  //Modals\n\n  openAddServiceDialog(): void {\n    const dialogRef = this.dialog.open(AddServiceComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.service = result;\n      this.kryService.addService(this.service).subscribe(\n        res => {\n         console.log(res);\n         this.getServices();\n        },\n        error => {\n          console.log(error);\n        });;\n    });\n\n\n  }\n\n  openUpdateServiceDialog(service:Service): void {\n    const dialogRef = this.dialog.open(UpdateServiceComponent,{data:service});\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.service = result;\n      this.service.name = this.selectedService.name;\n      console.log(result);\n      this.kryService.updateService(this.service).subscribe(\n        res => {\n          console.log(res);\n          this.getServices();\n        },\n        error => {\n          console.log(error);\n        });;\n    });\n\n\n  }\n\n  deleteService(service:Service){\n    this.kryService.deleteService(service).subscribe(\n      res => {\n        console.log(res);\n        this.getServices();\n      },\n      error => {\n        console.log(error);\n      });;\n  }\n\n}\n","\n<div class=\"input-group col-3\">\n  <button class=\"btn btn-success\"\n          (click)=\"openAddServiceDialog()\">\n    Add\n  </button>&nbsp;\n  <button class=\"btn btn-primary\"\n          (click)=\"openUpdateServiceDialog(selectedService)\"\n          [disabled]=\"!selectedService\">\n    Update\n  </button>&nbsp;\n  <button class=\"btn btn-danger\"\n          (click)=\"deleteService(selectedService)\"\n          [disabled]=\"!selectedService\">\n    Delete\n  </button>\n</div>\n<br>\n<div class=\"table-responsive-md\">\n    <table class=\"table table-hover table-sm\">\n      <thead class=\"thead-light\">\n      <tr>\n        <th>Name</th>\n        <th>Hostname</th>\n        <th>Port</th>\n        <th>Url</th>\n        <th>Created</th>\n        <th>Status</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let service of dataSource; let i=index;\" (click)=\"onSelect(service)\" >\n        <td>\n          <input type=\"checkbox\" [checked]=\"service == selectedService\">&nbsp;{{service.name}}\n        </td>\n        <td>{{service.hostname}}</td>\n        <td>{{service.port}}</td>\n        <td>{{service.url}}</td>\n        <td>{{service.created}}</td>\n        <td>{{service.status}}</td>\n\n      </tr>\n\n      </tbody>\n    </table>\n\n  </div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Service} from \"../../../models/Service\";\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-update-service',\n  templateUrl: './update-service.component.html',\n  styleUrls: ['./update-service.component.css']\n})\nexport class UpdateServiceComponent implements OnInit {\n\n  service:Service;\n  name:String;\n  constructor( @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.service = new Service();\n    console.log(this.data);\n  }\n\n}\n","\n<form class=\"example-form\" name=\"form\" #f=\"ngForm\" novalidate>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Name</mat-label>\n    <input matInput placeholder=\"Service Name\" name=\"name\" [disabled]=\"true\" [(ngModel)] = \"data.name\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Hostname</mat-label>\n    <input matInput placeholder=\"Host Name\" name=\"hostname\" [(ngModel)] = \"service.hostname\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Port</mat-label>\n    <input matInput placeholder=\"Port Number\" name=\"port\" [(ngModel)] = \"service.port\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Url</mat-label>\n    <input matInput placeholder=\"Url\" name=\"url\" [(ngModel)] = \"service.url\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n</form>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button [mat-dialog-close]=\"service\" cdkFocusInitial [disabled]=\"(!f.form.valid)\">Update</button>\n</mat-dialog-actions>\n","export class Service {\r\n\r\n  name: string;\r\n  hostname:string;\r\n  port:number;\r\n  url: string;\r\n  created: string;\r\n  status: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport {Service} from \"../models/Service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class KryServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getServices(): Observable<Service[]> {\n    return this.http.get<Service[]>('/kry/api/services');\n  }\n\n  addService(service:Service) {\n    return this.http.post('/kry/api/services',JSON.stringify(service));\n  }\n\n  updateService(service:Service) {\n    return this.http.put('/kry/api/services',JSON.stringify(service));\n  }\n\n  deleteService(service:Service) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }), body: JSON.stringify(service)\n    };\n    return this.http.delete('/kry/api/services',httpOptions);\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}