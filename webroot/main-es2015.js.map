{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/services-list/add-service/add-service.component.ts","./src/app/components/services-list/add-service/add-service.component.html","./src/app/components/services-list/services-list.component.ts","./src/app/components/services-list/services-list.component.html","./src/app/components/services-list/update-service/update-service.component.ts","./src/app/components/services-list/update-service/update-service.component.html","./src/app/models/Service.ts","./src/app/services/kry-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<div class=\"container-fluid\">\r\n  <div>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTableModule} from '@angular/material/table';\nimport { AppComponent } from './app.component';\nimport { ServicesListComponent } from './components/services-list/services-list.component';\n\nimport { HomeComponent } from './components/home/home.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {routing} from \"./app.routing\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule} from \"@angular/forms\";\nimport { AddServiceComponent } from './components/services-list/add-service/add-service.component';\nimport {MatFormField} from \"@angular/material/form-field\";\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { UpdateServiceComponent } from './components/services-list/update-service/update-service.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServicesListComponent,\n    HomeComponent,\n    AddServiceComponent,\n    UpdateServiceComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    routing,\n    MatDialogModule,\n    MatListModule,\n    MatTabsModule,\n    MatTableModule,\n    MatInputModule,\n    HttpClientModule,\n    MatButtonModule,\n    NgbModule,\n    FormsModule\n  ],\n  entryComponents: [AddServiceComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {PreloadAllModules, RouterModule, Routes} from \"@angular/router\";\r\nimport {ModuleWithProviders} from \"@angular/core\";\r\nimport {HomeComponent} from \"./components/home/home.component\";\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes, { useHash: true, preloadingStrategy: PreloadAllModules });\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br>\n\n<h1>KRY Services</h1>\n\n<br><br>\n<app-services-list></app-services-list>\n","import { Component, OnInit } from '@angular/core';\nimport {Service} from \"../../../models/Service\";\n\n\n\n@Component({\n  selector: 'app-add-service',\n  templateUrl: './add-service.component.html',\n  styleUrls: ['./add-service.component.css']\n})\nexport class AddServiceComponent implements OnInit {\n\n  name: string = '';\n  service:Service;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.service = new Service();\n  }\n\n  save(){\n      console.log(this.service);\n  }\n\n}\n","\n<form class=\"example-form\" name=\"form\" #f=\"ngForm\" novalidate>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Name</mat-label>\n    <input matInput placeholder=\"Service Name\" name=\"name\" [(ngModel)] = \"service.name\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Hostname</mat-label>\n    <input matInput placeholder=\"Host Name\" name=\"hostname\" [(ngModel)] = \"service.hostname\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Port</mat-label>\n    <input matInput placeholder=\"Port Number\" name=\"port\" [(ngModel)] = \"service.port\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Url</mat-label>\n    <input matInput placeholder=\"Url\" name=\"url\" [(ngModel)] = \"service.url\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n</form>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button [mat-dialog-close]=\"service\" cdkFocusInitial (click)=\"save()\" [disabled]=\"(!f.form.valid)\">Add</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport {KryServiceService} from \"../../services/kry-service.service\";\nimport {Service} from \"../../models/Service\";\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddServiceComponent} from \"./add-service/add-service.component\";\nimport {UpdateServiceComponent} from \"./update-service/update-service.component\";\n\n@Component({\n  selector: 'app-services-list',\n  templateUrl: './services-list.component.html',\n  styleUrls: ['./services-list.component.css']\n})\nexport class ServicesListComponent implements OnInit {\n\n  name:string='';\n  dataSource:Service[];\n  services:Service[];\n  service:Service;\n  selectedService:Service;\n\n  constructor(private kryService:KryServiceService,private modalService: NgbModal,private dialog: MatDialog) { }\n\n  ngOnInit(){\n    this.service = new Service();\n    this.getServices();\n  }\n\n  onSelect(service: Service): void {\n    this.selectedService = service;\n  }\n\n  getServices(){\n\n    this.kryService\n      .getServices()\n      .subscribe(result => {\n          this.services = result;\n          this.dataSource = this.services;\n        },\n        error => {\n          console.log(error);\n        });\n\n  }\n\n  //Modals\n\n  openAddServiceDialog(): void {\n    const dialogRef = this.dialog.open(AddServiceComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.service = result;\n      this.kryService.addService(this.service).subscribe(\n        res => {\n         console.log(res);\n         this.getServices();\n        },\n        error => {\n          console.log(error);\n        });;\n    });\n\n\n  }\n\n  openUpdateServiceDialog(service:Service): void {\n    const dialogRef = this.dialog.open(UpdateServiceComponent,{data:service});\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.service = result;\n      this.service.name = this.selectedService.name;\n      console.log(result);\n      this.kryService.updateService(this.service).subscribe(\n        res => {\n          console.log(res);\n          this.getServices();\n        },\n        error => {\n          console.log(error);\n        });;\n    });\n\n\n  }\n\n  deleteService(service:Service){\n    this.kryService.deleteService(service).subscribe(\n      res => {\n        console.log(res);\n        this.getServices();\n      },\n      error => {\n        console.log(error);\n      });;\n  }\n\n}\n","\n<div class=\"input-group col-3\">\n  <button class=\"btn btn-success\"\n          (click)=\"openAddServiceDialog()\">\n    Add\n  </button>&nbsp;\n  <button class=\"btn btn-primary\"\n          (click)=\"openUpdateServiceDialog(selectedService)\"\n          [disabled]=\"!selectedService\">\n    Update\n  </button>&nbsp;\n  <button class=\"btn btn-danger\"\n          (click)=\"deleteService(selectedService)\"\n          [disabled]=\"!selectedService\">\n    Delete\n  </button>\n</div>\n<br>\n<div class=\"table-responsive-md\">\n    <table class=\"table table-hover table-sm\">\n      <thead class=\"thead-light\">\n      <tr>\n        <th>Name</th>\n        <th>Hostname</th>\n        <th>Port</th>\n        <th>Url</th>\n        <th>Created</th>\n        <th>Status</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let service of dataSource; let i=index;\" (click)=\"onSelect(service)\" >\n        <td>\n          <input type=\"checkbox\" [checked]=\"service == selectedService\">&nbsp;{{service.name}}\n        </td>\n        <td>{{service.hostname}}</td>\n        <td>{{service.port}}</td>\n        <td>{{service.url}}</td>\n        <td>{{service.created}}</td>\n        <td>{{service.status}}</td>\n\n      </tr>\n\n      </tbody>\n    </table>\n\n  </div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Service} from \"../../../models/Service\";\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-update-service',\n  templateUrl: './update-service.component.html',\n  styleUrls: ['./update-service.component.css']\n})\nexport class UpdateServiceComponent implements OnInit {\n\n  service:Service;\n  name:String;\n  constructor( @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.service = new Service();\n    console.log(this.data);\n  }\n\n}\n","\n<form class=\"example-form\" name=\"form\" #f=\"ngForm\" novalidate>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Name</mat-label>\n    <input matInput placeholder=\"Service Name\" name=\"name\" [disabled]=\"true\" [(ngModel)] = \"data.name\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Hostname</mat-label>\n    <input matInput placeholder=\"Host Name\" name=\"hostname\" [(ngModel)] = \"service.hostname\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Port</mat-label>\n    <input matInput placeholder=\"Port Number\" name=\"port\" [(ngModel)] = \"service.port\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Url</mat-label>\n    <input matInput placeholder=\"Url\" name=\"url\" [(ngModel)] = \"service.url\" autocomplete=\"off\"\n           [required] = \"true\">\n  </mat-form-field>\n</form>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button [mat-dialog-close]=\"service\" cdkFocusInitial [disabled]=\"(!f.form.valid)\">Update</button>\n</mat-dialog-actions>\n","export class Service {\r\n\r\n  name: string;\r\n  hostname:string;\r\n  port:number;\r\n  url: string;\r\n  created: string;\r\n  status: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport {Service} from \"../models/Service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class KryServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getServices(): Observable<Service[]> {\n    return this.http.get<Service[]>('/kry/api/services');\n  }\n\n  addService(service:Service) {\n    return this.http.post('/kry/api/services',JSON.stringify(service));\n  }\n\n  updateService(service:Service) {\n    return this.http.put('/kry/api/services',JSON.stringify(service));\n  }\n\n  deleteService(service:Service) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }), body: JSON.stringify(service)\n    };\n    return this.http.delete('/kry/api/services',httpOptions);\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}